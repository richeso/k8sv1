source <(kubectl completion bash) # setup autocomplete in bash into the current shell, bash-completion package should be installed first.
echo "source <(kubectl completion bash)" >> ~/.bashrc # add autocomplete permanently to your bash shell.

echo "alias k=kubectl" >> ~/.bashrc 
echo "complete -F __start_kubectl k" >> ~/.bashrc 

apt-mark unhold kubeadm && \
apt-get update && apt-get install -y kubeadm=1.20.0-00 && \
apt-mark hold kubeadm

kubeadm upgrade apply v1.20.0

kubectl drain controlplane --ignore-daemonsets

# replace x in 1.22.x-00 with the latest patch version

apt-mark unhold kubelet kubectl && \
apt-get update && apt-get install -y kubelet=1.20.0-00 kubectl=1.20.0-00 && \
apt-mark hold kubelet kubectl
    
sudo systemctl daemon-reload
sudo systemctl restart kubelet
kubectl uncordon controlplane

kubectl get deployments -n admin2406 -o=custom-columns="DEPLOYMENT:.metadata.name,CONTAINER_IMAGE:.spec.template.spec.containers[*].image,READY_REPLICAS:.status.readyReplicas,NAMESPACE:.metadata.namespace" --sort-by=.metadata.name > /opt/admin2406_data

kubectl -n admin2406 get deployment -o custom-columns=DEPLOYMENT:.metadata.name,CONTAINER_IMAGE:.spec.template.spec.containers[].image,READY_REPLICAS:.status.readyReplicas,NAMESPACE:.metadata.namespace --sort-by=.metadata.name > /opt/admin2406_data

> /opt/admin2406_data

ETCDCTL_API=3 etcdctl --endpoints=https://127.0.0.1:2379 \
  --cacert=/etc/kubernetes/pki/etcd/ca.crt --cert=/etc/kubernetes/pki/etcd/server.crt --key=/etc/kubernetes/pki/etcd/server.key \
  snapshot save /opt/etcd-backup.db
  

kubectl get csr john -o jsonpath='{.status.certificate}'| base64 -d > john.crt

kubectl create role developer --verb=create,list,get,update,delete --resource=pods -n development

kubectl create rolebinding developer-binding-john --role=developer --user=john -n development

kubectl config set-credentials john --client-key=/root/CKA/john.key --client-certificate=/root/john.crt --embed-certs=true

kubectl config set-context john --cluster=kubernetes --user=john

kubectl run test-nslookup --image=busybox:1.28 --rm -it --restart=Never -- nslookup nginx-resolver-service
kubectl run test-nslookup --image=busybox:1.28 --rm -it --restart=Never -- nslookup nginx-resolver-service > /root/CKA/nginx.svc

kubectl get pod nginx-resolver -o wide
kubectl run test-nslookup --image=busybox:1.28 --rm -it --restart=Never -- nslookup 10-50-192-4 > /root/CKA/nginx.pod